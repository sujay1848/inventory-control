{"version":3,"sources":["Img/barcode-light-blue.svg","Img/barcode-white.svg","Img/magnifying-glass.svg","serviceWorker.js","StateManagement/Constants.js","StateManagement/Actions.js","HeaderPage/ViewTable.js","ControllerInteface/ApiCaller.js","HeaderPage/HeaderPage.js","CountStartPage/CountStartPage.js","Components/Swipeable.js","ReviewPage/EditableTable.js","Components/SwitchButton.js","ScanPage/HeaderMenu.js","ScanPage/ScanController.js","ScanPage/ScanPage.js","ReviewPage/ReviewPage.js","App.js","LocalStorage.js","StateManagement/Reducer.js","StateManagement/Store.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ADD_SKUS","SCAN_FIXTURE","scanSkus","payload","type","ACTION_CONSTANTS","setFixture","ViewTable","props","rows","data","sort","d1","d2","count","map","row","rowData","key","fixtureId","className","description","Array","isArray","this","length","Fragment","Component","saveStocktake","userId","stocks","success","fail","stockArray","Object","entries","e","push","upc","fetch","URL","method","headers","body","JSON","stringify","res","status","text","Error","err","ConnectedHeaderPage","handleFixtureIdChange","event","setState","target","value","handleSubmit","isButtonDisabled","setStatus","parse","placeholder","onChange","to","pathname","disabled","onClick","HeaderPage","connect","dispatch","ConnectedCountStartPage","CountStartPage","Swipeable","POSITIONS","RIGHT","LEFT","NEUTRAL","onTouchStart","x","touches","clientX","y","clientY","onTouchMove","position","onRightSwipe","onNeutral","onLeftSwipe","children","EditableTable","vol","OPERATIONS","ADJUST","DELETE","filerSkuList","memoize","list","keyword","field","reverse","filter","tuple","includes","Number","pagedSkuList","page","slice","onCountChange","valChange","assign","skuCountList","setSkuCountList","onRemoveSku","setTimeout","selectedKey","onClickDelete","Swal","fire","title","icon","showCloseButton","confirmButtonColor","confirmButtonText","result","afterDelete","setSearchTerm","term","searchTerm","selectedOperation","searchField","prevProps","prevState","snapshot","totalPage","Math","ceil","viewableList","SwitchButton","selected","setSelected","Selected","src","selectedIcon","alt","unselectedIcon","HeaderMenu","BlueBarcode","WhiteBarcode","scannerMode","setScannerMode","MagnifyingGlass","ScanController","handleTextChange","onSubmit","saveUpc","returnFocus","textField","current","focus","setAttribute","removeAttribute","React","createRef","ref","ConnectedScanPage","resetState","textInput","mode","handleSkuSaveWithId","skuId","skuList","disableButton","onClickClear","ScanPage","ConnectedReviewPage","clearState","setFixtureId","onClickSubmit","input","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","onClickSubmitEmployeeId","allowOutsideClick","isLoading","onSuccessSubmission","userid","showValidationMessage","allowEscapeKey","App","basename","exact","path","ReviewPage","FIXTURE_ID","SKU_COUNT_LIST","initialState","localStorage","getItem","rootReducer","action","removeItem","setItem","store","createStore","ReactDOM","render","document","getElementById","process","href","origin","addEventListener","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0a007fd8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/barcode-light-blue.55775926.svg\";","module.exports = __webpack_public_path__ + \"static/media/barcode-white.9f08b578.svg\";","module.exports = __webpack_public_path__ + \"static/media/magnifying-glass.ed09bbc2.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const ADD_SKUS = \"ADD_SKUS\";\nexport const SCAN_FIXTURE = \"SCAN_FIXTURE\";\n","import * as ACTION_CONSTANTS from \"./Constants\";\n\nexport function scanSkus(payload) {\n  return { type: ACTION_CONSTANTS.ADD_SKUS, payload };\n}\n\nexport function setFixture(payload) {\n  return { type: ACTION_CONSTANTS.SCAN_FIXTURE, payload };\n}\n","import React, { Component } from \"react\";\n\nexport class ViewTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  rows = data => {\n    data.sort((d1, d2) => d1.count - d2.count);\n    return data.map(row => this.row(row));\n  };\n\n  row = rowData => {\n    return (\n      <div\n        key={rowData.fixtureId}\n        className=\"flex justify-between w-100 h3 bb bw1 b--black-20 ph3\"\n      >\n        <div className=\"flex flex-column justify-center w-70\">\n          <div className=\"f4 b\">{rowData.fixtureId}</div>\n          <div className=\"f5\">{rowData.description}</div>\n        </div>\n        <div className=\"flex flex-column justify-center w-30\">\n          <div className=\"tc f5 b\">{rowData.count}</div>\n          {rowData.count > 0 ? (\n            <div className=\"flex justify-center items-center h2 br2 bg-green white b\">\n              <span>Complete</span>\n            </div>\n          ) : (\n            <div className=\"flex justify-center items-center h2 br2 bg-dark-red white b\">\n              <span>Incomplete</span>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    if (!Array.isArray(this.props.data) || this.props.data.length < 1) {\n      return <React.Fragment />;\n    } else {\n      return (\n        <div className=\"flex flex-column w-100\">\n          <div className=\"w-100 h2 flex items-center bg-light-gray bb b--black-20 ph3\">\n            <div className=\"w-70 tc f5 b\">Fixture</div>\n            <div className=\"w-30 tc f5 b\">Status</div>\n          </div>\n\n          <div className=\"flex flex-column\">{this.rows(this.props.data)}</div>\n        </div>\n      );\n    }\n  }\n}\n","const URL = \"http://3.134.88.218:3001/\";\nconst POST_SUBMISSION = URL + \"submission\";\nconst GET_STATUS = URL + \"status\";\n\nexport const getStatus = setStatus => {\n  fetch(GET_STATUS, {\n    method: \"get\",\n    headers: { \"Content-Type\": \"application/json\" }\n  })\n    .then(res => {\n      if (res.status !== 200) {\n        throw new Error(\"Invalid response status\");\n      }\n      return res.text();\n    })\n    .then(body => {\n      setStatus(JSON.parse(body));\n    })\n    .catch(err => {\n      console.log(err);\n      setStatus([]);\n    });\n};\n\nexport const saveStocktake = (userId, fixtureId, stocks, success, fail) => {\n  let stockArray = [];\n  for (let e of Object.entries(stocks)) {\n    stockArray.push({ upc: e[0], count: e[1] });\n  }\n\n  return fetch(POST_SUBMISSION, {\n    method: \"post\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      fixtureId: fixtureId,\n      userId: userId,\n      stocks: stockArray\n    })\n  })\n    .then(res => {\n      if (res.status === 200) {\n        success();\n        return null;\n      }\n      return res.text();\n    })\n    .then(text => {\n      if (text !== null) {\n        throw new Error(text);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n      fail(err);\n    });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setFixture } from \"../StateManagement/Actions\";\nimport { ViewTable } from \"./ViewTable\";\nimport { getStatus } from \"../ControllerInteface/ApiCaller\";\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setFixture: fixtureId => dispatch(setFixture(fixtureId))\n  };\n}\n\nclass ConnectedHeaderPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fixtureId: null,\n      status: []\n    };\n  }\n\n  handleFixtureIdChange = event =>\n    this.setState({ fixtureId: event.target.value });\n  handleSubmit = event => {\n    this.props.setFixture({ fixtureId: this.state.fixtureId });\n  };\n  isButtonDisabled = () => !this.state.fixtureId;\n\n  componentDidMount() {\n    getStatus(status => this.setState({ status: status }));\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"flex flex-column ma3\">\n          <input\n            type=\"text\"\n            placeholder=\"Type fixture ID here...\"\n            onChange={this.handleFixtureIdChange}\n            className=\"w-100 h2 mb2 br2 ph1\"\n          />\n          <Link\n            to={location =>\n              this.isButtonDisabled() ? location.pathname : \"/start\"\n            }\n            className=\"noLink\"\n          >\n            <button\n              className={\n                \"w-100 f5 b white bw0 br2 dim h2\" +\n                (this.isButtonDisabled() ? \"\" : \" bg-blue\")\n              }\n              disabled={this.isButtonDisabled()}\n              onClick={this.handleSubmit}\n            >\n              PROCEED\n            </button>\n          </Link>\n        </div>\n\n        <ViewTable\n          data={this.state.status}\n        />\n      </div>\n    );\n  }\n}\nconst HeaderPage = connect(null, mapDispatchToProps)(ConnectedHeaderPage);\n\nexport default HeaderPage;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\n\nconst mapStateToProps = state => {\n  return { fixtureId: state.fixtureId };\n};\n\nclass ConnectedCountStartPage extends Component {\n  render() {\n    if (!this.props.fixtureId) {\n      return <Redirect push to=\"/\" />;\n    }\n\n    return (\n      <div>\n        <div className=\"ma2\">\n          <span className=\"f4 mr2\">FIXTURE ID:</span>\n          <span className=\"underline f4\">{this.props.fixtureId}</span>\n        </div>\n        <div className=\"flex flex-column ma3\">\n          <Link to=\"/scan\" className=\"noLink\">\n            <button className={\"w-100 f5 b white bw0 br2 dim h2 bg-blue mb2\"}>\n              START SCANNING\n            </button>\n          </Link>\n          <Link to=\"/\" className=\"noLink\">\n            <button className={\"w-100 f5 b white bw0 br2 dim h2 bg-red\"}>\n              BACK HOME\n            </button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst CountStartPage = connect(mapStateToProps)(ConnectedCountStartPage);\nexport default CountStartPage;\n","import React, { Component } from \"react\";\n\nexport class Swipeable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      position: this.POSITIONS.NEUTRAL\n    };\n    this.x = 0;\n    this.y = 0;\n  }\n\n  POSITIONS = {\n    RIGHT: \"right\",\n    LEFT: \"left\",\n    NEUTRAL: \"neutral\"\n  };\n\n  onTouchStart = event => {\n    this.x = event.touches[0].clientX;\n    this.y = event.touches[0].clientY;\n  };\n\n  onTouchMove = event => {\n    let x = event.touches[0].clientX;\n    if (x - this.x > 80) {\n      this.x = x;\n      if (this.state.position === this.POSITIONS.NEUTRAL) {\n        this.setState(\n          { position: this.POSITIONS.RIGHT },\n          this.props.onRightSwipe\n        );\n      } else if (this.state.position === this.POSITIONS.LEFT) {\n        this.setState(\n          { position: this.POSITIONS.NEUTRAL },\n          this.props.onNeutral\n        );\n      }\n    } else if (x - this.x < -80) {\n      this.x = x;\n      if (this.state.position === this.POSITIONS.NEUTRAL) {\n        this.setState(\n          { position: this.POSITIONS.LEFT },\n          this.props.onLeftSwipe\n        );\n      } else if (this.state.position === this.POSITIONS.RIGHT) {\n        this.setState(\n          { position: this.POSITIONS.NEUTRAL },\n          this.props.onNeutral\n        );\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div\n        onTouchStart={this.onTouchStart}\n        onTouchMove={this.onTouchMove}\n        className={this.props.className}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport memoize from \"memoize-one\";\nimport Swal from \"sweetalert2\";\nimport { Swipeable } from \"../Components/Swipeable\";\n\nexport class EditableTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedKey: null,\n      selectedOperation: null,\n      page: 1,\n      searchField: 0,\n      searchTerm: \"\"\n    };\n  }\n\n  // Number of items per page\n  vol = 5;\n\n  OPERATIONS = {\n    ADJUST: \"adjust\",\n    DELETE: \"delete\"\n  };\n\n  filerSkuList = memoize((list, keyword, field) => {\n    list = Object.entries(list).reverse();\n    console.log(\"Filtering...\");\n    if (keyword === \"\") return list;\n    return list.filter(tuple => {\n      if (field === 0) {\n        return tuple[0].includes(keyword);\n      } else if (field === 1) {\n        return Number(keyword) && tuple[1] === Number(keyword);\n      }\n      return false;\n    });\n  });\n\n  pagedSkuList = (list, page, vol) => {\n    return list.slice((page - 1) * vol, page * vol);\n  };\n\n  onCountChange = (tuple, valChange) => {\n    let list = Object.assign({}, this.props.skuCountList);\n    list[tuple[0]] = tuple[1] + valChange;\n    this.props.setSkuCountList({ skuCountList: list });\n  };\n\n  onRemoveSku = key => {\n    let list = Object.assign({}, this.props.skuCountList);\n    delete list[key];\n    this.props.setSkuCountList({ skuCountList: list });\n    // Overwrite the setting of selectedKey from TableRow onClick\n    setTimeout(() => this.setState({ selectedKey: null }), 50);\n  };\n\n  onClickDelete = key => {\n    Swal.fire({\n      title: \"Delete?\",\n      text: \"SKU \" + key,\n      icon: \"warning\",\n      showCloseButton: true,\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Confirm\"\n    }).then(result => {\n      if (result.value) {\n        this.onRemoveSku(key);\n        if (this.props.afterDelete) this.props.afterDelete();\n      }\n    });\n  };\n\n  setSearchTerm = term => this.setState({ searchTerm: term });\n\n  row = data => {\n    return (\n      <Swipeable\n        key={data[0]}\n        className=\"w-100 h3 flex items-center bb b--black-20\"\n        onRightSwipe={() =>\n          this.setState({\n            selectedKey: data[0],\n            selectedOperation: this.OPERATIONS.ADJUST\n          })\n        }\n        onLeftSwipe={() =>\n          this.setState({\n            selectedKey: data[0],\n            selectedOperation: this.OPERATIONS.DELETE\n          })\n        }\n        onNeutral={() =>\n          this.setState({ selectedKey: null, selectedOperation: null })\n        }\n      >\n        <div className=\"w-50 tc\">{data[0]}</div>\n\n        <div className=\"w-50 flex justify-around items-center\">\n          {this.state.selectedKey !== data[0] && (\n            <span className=\"\">{data[1]}</span>\n          )}\n          {this.state.selectedKey === data[0] &&\n            this.state.selectedOperation === this.OPERATIONS.DELETE && (\n              <button\n                className=\"w-80 h2 br2 bn bg-dark-red white b\"\n                onClick={() => this.onClickDelete(data[0])}\n              >\n                Delete\n              </button>\n            )}\n          {this.state.selectedKey === data[0] &&\n            this.state.selectedOperation === this.OPERATIONS.ADJUST && (\n              <React.Fragment>\n                <button\n                  className=\"bn bg-white f3 b\"\n                  onClick={() => this.onCountChange(data, 1)}\n                >\n                  +\n                </button>\n                <span>{data[1]}</span>\n                <button\n                  className={\n                    \"bn bg-white f3 b\" + (data[1] < 2 ? \" hidden\" : \"\")\n                  }\n                  onClick={() => this.onCountChange(data, -1)}\n                >\n                  -\n                </button>\n              </React.Fragment>\n            )}\n        </div>\n      </Swipeable>\n    );\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    let totalPage = Math.ceil(\n      this.filerSkuList(\n        this.props.skuCountList,\n        this.state.searchTerm,\n        this.state.searchField\n      ).length / this.vol\n    );\n    // Change to second last page, after deletion of last page\n    if (this.state.page > totalPage) this.setState({ page: totalPage });\n    // Change to first page from 0 page, after adding of the first record\n    if (this.state.page < 1 && totalPage > 0) this.setState({ page: 1 });\n  }\n\n  render() {\n    let list = this.filerSkuList(\n      this.props.skuCountList,\n      this.state.searchTerm,\n      this.state.searchField\n    );\n    let totalPage = Math.ceil(list.length / this.vol);\n    let viewableList = this.pagedSkuList(list, this.state.page, this.vol);\n\n    return (\n      <React.Fragment>\n        <div className=\"w-100 flex-column mv2\">\n          <div className=\"w-100 h2 flex items-center bg-light-gray bb b--black-20\">\n            <div className=\"w-50 tc f5 b\">UPC</div>\n            <div className=\"w-50 tc f5 b\">Quantity</div>\n          </div>\n\n          {viewableList.map(tuple => this.row(tuple))}\n\n          {totalPage > 0 && (\n            <div className=\"flex justify-center items-center helvetica pa2 bg-light-gray mb2\">\n              <input\n                type=\"button\"\n                className={\n                  \"b--none bg-transparent f5 b\" +\n                  (this.state.page < 2 ? \" hidden\" : \"\")\n                }\n                value=\"|<\"\n                onClick={() => this.setState({ page: 1 })}\n              />\n              <input\n                type=\"button\"\n                className={\n                  \"b--none bg-transparent f5 b\" +\n                  (this.state.page < 2 ? \" hidden\" : \"\")\n                }\n                value=\"<\"\n                onClick={() => this.setState({ page: this.state.page - 1 })}\n              />\n              <span className=\"f5\">\n                {\" \"}\n                {this.state.page} / {totalPage} page{\" \"}\n              </span>\n              <input\n                type=\"button\"\n                className={\n                  \"b--none bg-transparent f5 b\" +\n                  (this.state.page === totalPage ? \" hidden\" : \"\")\n                }\n                value=\">\"\n                onClick={() => this.setState({ page: this.state.page + 1 })}\n              />\n              <input\n                type=\"button\"\n                className={\n                  \"b--none bg-transparent f5 b\" +\n                  (this.state.page === totalPage ? \" hidden\" : \"\")\n                }\n                value=\">|\"\n                onClick={() => this.setState({ page: totalPage })}\n              />\n            </div>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nclass SwitchButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Selected: this.props.selected\n    };\n  }\n\n  onClick = () => {\n    this.setState({ selected: !this.state.selected }, () => {\n      this.props.setSelected(this.state.selected);\n    });\n  };\n\n  componentDidMount() {\n    this.setState({ selected: this.props.selected });\n  }\n\n  render() {\n    return this.state.selected ? (\n      <div className=\"h2 w3 br2 bg-light-blue flex justify-center items-center\">\n        <button className=\"w-90 h-75 br2 bn bg-white\" onClick={this.onClick}>\n          <img\n            src={this.props.selectedIcon}\n            alt=\"barcode\"\n            className=\"w-100 h-100\"\n          />\n        </button>\n      </div>\n    ) : (\n      <button className=\"h2 w3 br2 bn bg-blue b--blue\" onClick={this.onClick}>\n        <img\n          src={this.props.unselectedIcon}\n          alt=\"barcode\"\n          className=\"w-100 h-100\"\n        />\n      </button>\n    );\n  }\n}\n\nexport default SwitchButton;\n","import React, { Component } from \"react\";\nimport SwitchButton from \"../Components/SwitchButton\";\nimport BlueBarcode from \"../Img/barcode-light-blue.svg\";\nimport WhiteBarcode from \"../Img/barcode-white.svg\";\nimport MagnifyingGlass from \"../Img/magnifying-glass.svg\";\n\nclass HeaderMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div className=\"flex justify-between\">\n        <div className=\"ma2\">\n          <span className=\"f4 mr2\">FIXTURE ID:</span>\n          <span className=\"underline f4\">{this.props.fixtureId}</span>\n        </div>\n        <div className=\"flex\">\n          <SwitchButton\n            selectedIcon={BlueBarcode}\n            unselectedIcon={WhiteBarcode}\n            selected={this.props.scannerMode}\n            setSelected={this.props.setScannerMode}\n          />\n          <button\n            className=\"h2 w2 br2 bg-blue b--blue bn ml1\"\n            onClick={() => {}}\n          >\n            <img\n              src={MagnifyingGlass}\n              alt=\"Magnifying Glass\"\n              className=\"w-100 h-100\"\n            />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HeaderMenu;\n","import React, { Component } from \"react\";\n\nclass ScanController extends Component {\n  constructor(props) {\n    super(props);\n    this.textField = React.createRef();\n    this.state = {\n      text: \"\"\n    };\n  }\n\n  handleTextChange = event => {\n    this.setState({\n      text: event.target.value\n    });\n    if (this.props.scannerMode) {\n      this.onSubmit(event.target.value);\n    }\n  };\n\n  onSubmit = upc => {\n    this.props.saveUpc(upc);\n    this.setState({ text: \"\" });\n  };\n\n  returnFocus = () => {\n    if (this.textField.current == null) return;\n    this.textField.current.focus();\n    if (this.props.scannerMode) {\n      // Hide virtual keyboard\n      this.textField.current.setAttribute(\"readonly\", true);\n      setTimeout(() => {\n        this.textField.current.removeAttribute(\"readonly\");\n      }, 100);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"w-100 flex flex-column mv2\">\n        <input\n          type=\"text\"\n          placeholder=\"Type product barcode here...\"\n          value={this.state.text}\n          ref={this.textField}\n          onChange={this.handleTextChange}\n          onClick={this.returnFocus}\n          className=\"w-100 h2 mb1 br2 ph1\"\n        />\n        <input\n          type=\"button\"\n          value=\"ENTER\"\n          className={\n            \"w-100 f5 b white bw0 br2 dim h2\" +\n            (this.state.text === \"\" ? \"\" : \" bg-green\")\n          }\n          onClick={() => this.onSubmit(this.state.text)}\n          disabled={this.state.text === \"\"}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ScanController;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { scanSkus } from \"../StateManagement/Actions\";\nimport Swal from \"sweetalert2\";\nimport { EditableTable } from \"../ReviewPage/EditableTable\";\nimport HeaderMenu from \"./HeaderMenu\";\nimport ScanController from \"./ScanController\";\n\nconst mapStateToProps = state => {\n  return { fixtureId: state.fixtureId, skuCountList: state.skuCountList };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setSkuCountList: skuCountList => dispatch(scanSkus(skuCountList))\n  };\n}\n\nexport class ConnectedScanPage extends Component {\n  constructor(props) {\n    super(props);\n    this.textInput = React.createRef();\n    this.EditableTable = React.createRef();\n    this.state = {\n      scannerMode: true\n    };\n  }\n\n  resetState = () => {\n    this.props.setSkuCountList({ skuCountList: {} });\n    this.returnFocus();\n  };\n\n  returnFocus = () => {\n    if (this.textInput.current == null) return;\n    this.textInput.current.returnFocus();\n  };\n\n  setScannerMode = mode => {\n    this.setState({ scannerMode: mode });\n  };\n\n  handleSkuSaveWithId = skuId => {\n    let skuList = Object.assign({}, this.props.skuCountList);\n    if (skuList[skuId]) {\n      let count = skuList[skuId];\n      delete skuList[skuId];\n      skuList[skuId] = count + 1;\n    } else if (skuId) {\n      skuList[skuId] = 1;\n    }\n    this.props.setSkuCountList({ skuCountList: skuList });\n    this.returnFocus();\n  };\n\n  disableButton = () =>\n    !this.props.skuCountList ||\n    Object.entries(this.props.skuCountList).length === 0;\n\n  setSearchTerm = term => this.EditableTable.current.setSearchTerm(term);\n\n  onClickClear = () => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCloseButton: true,\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, clear it!\"\n    }).then(result => {\n      if (result.value) {\n        this.resetState();\n      }\n    });\n  };\n\n  componentDidMount() {\n    this.returnFocus();\n  }\n\n  render() {\n    if (!this.props.fixtureId) {\n      return <Redirect push to=\"/\" />;\n    }\n    return (\n      <div>\n        <div className=\"flex flex-column ma3\">\n          <HeaderMenu\n            scannerMode={this.state.scannerMode}\n            setScannerMode={this.setScannerMode}\n            fixtureId={this.props.fixtureId}\n          />\n          <EditableTable\n            skuCountList={this.props.skuCountList}\n            setSkuCountList={this.props.setSkuCountList}\n            afterDelete={this.returnFocus}\n            ref={this.EditableTable}\n          />\n          <ScanController\n            ref={this.textInput}\n            scannerMode={this.state.scannerMode}\n            saveUpc={this.handleSkuSaveWithId}\n          />\n          <div className=\"flex w-100\">\n            <input\n              type=\"button\"\n              value=\"CLEAR\"\n              className={\n                \"flex-grow-1 f5 b white bw0 h2 br2 mr1\" +\n                (this.disableButton() ? \"\" : \" bg-dark-red\")\n              }\n              onClick={this.onClickClear}\n              disabled={this.disableButton()}\n            />\n            <Link\n              to={location =>\n                this.disableButton() ? location.pathname : \"/review\"\n              }\n              className=\"noLink flex-grow-1 ml1\"\n            >\n              <input\n                type=\"button\"\n                value=\"REVIEW\"\n                className={\n                  \"w-100 f5 b white bw0 h2 br2\" +\n                  (this.disableButton() ? \"\" : \" bg-blue\")\n                }\n              />\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst ScanPage = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectedScanPage);\nexport default ScanPage;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { setFixture, scanSkus } from \"../StateManagement/Actions\";\nimport { EditableTable } from \"./EditableTable\";\nimport { saveStocktake } from \"../ControllerInteface/ApiCaller\";\nimport Swal from \"sweetalert2\";\n\nconst mapStateToProps = state => {\n  return {\n    fixtureId: state.fixtureId,\n    skuCountList: state.skuCountList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSkuCountList: skuCountList => dispatch(scanSkus(skuCountList)),\n    setFixtureId: fixtureId => dispatch(setFixture(fixtureId))\n  };\n};\n\nexport class ConnectedReviewPage extends Component {\n  clearState = () => {\n    this.props.setSkuCountList({ skuCountList: {} });\n    this.props.setFixtureId({ fixtureId: null });\n  };\n\n  // First popup for submission confirmation\n  onClickSubmit = () => {\n    Swal.fire({\n      title: \"Submission\",\n      text: \"Enter your employee ID\",\n      input: \"text\",\n      inputAttributes: {\n        autocapitalize: \"off\"\n      },\n      showCloseButton: true,\n      confirmButtonText: \"Confirm\",\n      showLoaderOnConfirm: true,\n      preConfirm: this.onClickSubmitEmployeeId,\n      allowOutsideClick: () => !Swal.isLoading()\n    }).then(result => {\n      if (result.value) {\n        this.onSuccessSubmission();\n      }\n    });\n  };\n\n  onClickSubmitEmployeeId = userid => {\n    let { fixtureId, skuCountList } = this.props;\n    return saveStocktake(\n      userid,\n      fixtureId,\n      skuCountList,\n      () => {},\n      err => Swal.showValidationMessage(`${err}`)\n    );\n  };\n\n  onSuccessSubmission = () => {\n    Swal.fire({\n      title: \"Successful!\",\n      text: \"The records has been submitted.\",\n      icon: \"success\",\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Start New Count\",\n      allowOutsideClick: false,\n      allowEscapeKey: false\n    }).then(result => {\n      if (result.value) {\n        // Link to count start page by clearing all scanned records\n        this.clearState();\n      }\n    });\n  };\n\n  disableButton = () =>\n    !this.props.skuCountList ||\n    Object.entries(this.props.skuCountList).length === 0;\n\n  render() {\n    if (!this.props.fixtureId) {\n      return <Redirect push to=\"/\" />;\n    }\n    return (\n      <div>\n        <div className=\"flex flex-column ma3\">\n          <div className=\"flex ma2\">\n            <span className=\"f4 mr2\">FIXTURE ID:</span>\n            <span className=\"underline f4\">{this.props.fixtureId}</span>\n          </div>\n          <div>\n            <EditableTable\n              skuCountList={this.props.skuCountList}\n              setSkuCountList={this.props.setSkuCountList}\n            />\n          </div>\n          <div className=\"flex flex-column\">\n            <button\n              className={\n                \"w-100 f5 b white bw0 h2 br2\" +\n                (this.disableButton() ? \"\" : \" bg-blue\")\n              }\n              disabled={this.disableButton()}\n              onClick={this.onClickSubmit}\n            >\n              SUBMIT\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst ScanPage = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectedReviewPage);\nexport default ScanPage;\n","import React from \"react\";\nimport HeaderPage from \"./HeaderPage/HeaderPage.js\";\nimport CountStartPage from \"./CountStartPage/CountStartPage.js\";\nimport ScanPage from \"./ScanPage/ScanPage.js\";\nimport ReviewPage from \"./ReviewPage/ReviewPage\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router basename=\"/inventory-control\">\n      <div>\n        <Route exact path=\"/\">\n          <HeaderPage />\n        </Route>\n        <Route exact path=\"/start\">\n          <CountStartPage />\n        </Route>\n        <Route exact path=\"/scan\">\n          <ScanPage />\n        </Route>\n        <Route exact path=\"/review\">\n          <ReviewPage />\n        </Route>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","export const FIXTURE_ID = \"fixtureId\";\nexport const SKU_COUNT_LIST = \"skuCountList\";\n","import * as ACTION_CONSTANTS from \"./Constants\";\nimport { FIXTURE_ID, SKU_COUNT_LIST } from \"../LocalStorage\";\n\nconst initialState = {\n  fixtureId: localStorage.getItem(FIXTURE_ID),\n  skuCountList:\n    localStorage.getItem(SKU_COUNT_LIST) === null\n      ? {}\n      : JSON.parse(localStorage.getItem(SKU_COUNT_LIST))\n};\nfunction rootReducer(state = initialState, action) {\n  if (action.type === ACTION_CONSTANTS.ADD_SKUS) {\n    if (Object.entries(action.payload.skuCountList).length === 0) {\n      localStorage.removeItem(SKU_COUNT_LIST);\n    } else {\n      localStorage.setItem(\n        SKU_COUNT_LIST,\n        JSON.stringify(action.payload.skuCountList)\n      );\n    }\n    return Object.assign({}, state, {\n      skuCountList: action.payload.skuCountList\n    });\n  } else if (action.type === ACTION_CONSTANTS.SCAN_FIXTURE) {\n    if (action.payload.fixtureId === null) {\n      localStorage.removeItem(FIXTURE_ID);\n    } else {\n      localStorage.setItem(FIXTURE_ID, action.payload.fixtureId);\n    }\n    return Object.assign({}, state, {\n      fixtureId: action.payload.fixtureId\n    });\n  }\n  return state;\n}\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./Reducer.js\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./StateManagement/Store.js\";\nimport \"tachyons\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}